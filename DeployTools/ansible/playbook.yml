--- # Start of playbook
- name: Deploy Dockerized Nginx Static App with Docker Compose to EC2
  hosts: webservers # Target group from inventory
  become: yes # Use sudo
  vars:
    ansible_user: ubuntu # SSH user
    ansible_python_interpreter: /usr/bin/python3
    app_project_dir: /opt/network-systemadmin-app # App directory on EC2

  tasks:
    - name: Update all apt packages
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: yes

    - name: Install Docker
      ansible.builtin.apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Enable Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Add user to Docker group # Allow Docker without sudo
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Docker Compose
      ansible.builtin.apt:
        name: docker-compose
        state: present

    - name: Create app directory
      ansible.builtin.file:
        path: "{{ app_project_dir }}"
        state: directory
        mode: "0755"
        owner: ubuntu
        group: ubuntu
        recurse: yes

    - name: Copy project files to EC2
      ansible.builtin.synchronize:
        src: "{{ lookup('env', 'GITHUB_WORKSPACE') }}/"
        dest: "{{ app_project_dir }}/"
        mode: push
        archive: yes
        rsync_opts:
          - "--exclude=.git/"
          - "--exclude=DeployTools/"
          - "--exclude=.vscode/"
          - "--exclude=__pycache__/"
          - "--exclude=*.swp"
          - "--exclude=*.bak"

    - name: Set ownership for project files
      ansible.builtin.file:
        path: "{{ app_project_dir }}"
        owner: ubuntu
        group: ubuntu
        mode: "0755"
        recurse: yes

    - name: Remove old Docker Compose services
      ansible.builtin.command: docker-compose down -v
      args:
        chdir: "{{ app_project_dir }}"
      ignore_errors: yes # Ignore if nothing to stop

    - name: Build and run Docker Compose
      ansible.builtin.command: docker-compose up -d --build --force-recreate
      args:
        chdir: "{{ app_project_dir }}"
      register: docker_compose_output
      changed_when: "docker_compose_output.rc == 0 and ('Creating' in docker_compose_output.stdout or 'Recreating' in docker_compose_output.stdout or 'Building' in docker_compose_output.stdout)"

    - name: Show deployment output
      ansible.builtin.debug:
        var: docker_compose_output.stdout_lines
